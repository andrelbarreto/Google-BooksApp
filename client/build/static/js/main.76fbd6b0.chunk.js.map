{"version":3,"sources":["components/NavBar/index.js","components/Header/index.js","components/Wrapper/index.js","pages/NoMatch.js","components/Form/index.js","utils/API.js","components/Results/index.js","pages/Search.js","pages/Saved.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","window","location","pathname","Header","Wrapper","props","NoMatch","role","aria-label","Form","htmlFor","onChange","handleInputChange","value","search","name","type","placeholder","id","onClick","handleFormSubmit","query","axios","get","delete","then","result","data","bookData","post","Results","state","savedBooks","handleSave","book","map","_id","includes","API","deletedBook","setState","filter","catch","err","console","error","savedBook","concat","this","books","length","key","alt","title","src","image","authors","description","href","link","target","Component","Search","makeBook","volumeInfo","imageLinks","thumbnail","previewLink","searchBook","res","items","event","preventDefault","React","Saved","App","NavBar","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.76fbd6b0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction Navbar() {\r\n    return (\r\n\r\n\r\n        <nav className=\"navbar navbar-expand-lg text-light\">\r\n            <div className=\"container\">\r\n                <Link className=\"navbar-brand\" to=\"/\">Google Books</Link>\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <Link\r\n                            to=\"/search\"\r\n                            className={window.location.pathname === \"/search\" ? \"nav-link active\" : \"nav-link\"}\r\n                        > Search</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link\r\n                            to=\"/saved\"\r\n                            className={window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"}\r\n                        >Saved</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"jumbotron text-center\">\r\n            <div className=\"container text-light\">\r\n                <h1>Google Books Search</h1>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Wrapper(props) {\r\n  return <main className=\"wrapper\" {...props} />;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport Header from \"../components/Header\";\r\n\r\nfunction NoMatch() {\r\n  return (\r\n    <div>\r\n          <Header>\r\n            <h1>404 Page Not Found</h1>\r\n            <h1>\r\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n                ðŸ™„\r\n              </span>\r\n            </h1>\r\n          </Header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoMatch;","import React from \"react\";\r\n\r\n\r\nfunction Form(props){\r\nreturn (\r\n  <div className=\"container\">\r\n  <form>\r\n    <div className=\"form-group\">\r\n      <label htmlFor=\"search\"><h2>Search for and save Books of Interest</h2></label>\r\n      <input\r\n        onChange={props.handleInputChange}\r\n        value={props.search}\r\n        name=\"search\"\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        placeholder=\"Search a Book\"\r\n        id=\"search\"\r\n      />\r\n      <button onClick={props.handleFormSubmit} className=\"btn btn-dark mt-3 mb-5\">\r\n        Search\r\n        </button>\r\n    </div>\r\n  </form>\r\n  </div>\r\n);\r\n}\r\n\r\nexport default Form;","import axios from \"axios\";\r\n\r\nexport default {\r\n  getBook: function (query) {\r\n    return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\r\n  },\r\n  // Deletes the book with the given id\r\n  deleteBook: function (id) {\r\n    return axios.delete(\"/api/books/\" + id).then(result => result.data);\r\n  },\r\n  // Saves a book to the database\r\n  saveBook: function (bookData) {\r\n    return axios.post(\"/api/books\", bookData).then(result => result.data);\r\n  },\r\n  // Get the saved a books from the database\r\n  savedBooks: function () {\r\n    return axios.get(\"/api/books\").then(result => result.data);\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport API from \"../../utils/API\";\r\n\r\nclass Results extends Component {\r\n\r\n    state = {\r\n        savedBooks: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        API.savedBooks()\r\n            .then(savedBooks => this.setState({ savedBooks: savedBooks }))\r\n            .catch(err => console.error(err));\r\n    }\r\n\r\n    handleSave = book => {\r\n\r\n        if (this.state.savedBooks.map(book => book._id).includes(book._id)) {\r\n            API.deleteBook(book._id)\r\n                .then(deletedBook => this.setState({ savedBooks: this.state.savedBooks.filter(book => book._id !== deletedBook._id) }))\r\n                .catch(err => console.error(err));\r\n        } else {\r\n            API.saveBook(book)\r\n                .then(savedBook => this.setState({ savedBooks: this.state.savedBooks.concat([savedBook]) }))\r\n                .catch(err => console.error(err));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.props.books.length ? (\r\n                    <h1 className=\"text-center\">Nothing to Display!</h1>\r\n                ) : (\r\n                        <div>\r\n                            {this.props.books.map(result => (\r\n                                <div className=\"card mb-3\" key={result._id}>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-2\">\r\n                                            <img alt={result.title} className=\"img-fluid\" src={result.image} />\r\n                                        </div>\r\n                                        <div className=\"col-md-10\">\r\n                                            <div className=\"card-body\">\r\n                                                <h5 className=\"card-title\">{result.title} by {result.authors}</h5>\r\n                                                <p className=\"card-text\">{result.description}</p>\r\n                                                <div>\r\n                                                    <a href={result.link} className=\"btn badge-pill btn-outline-dark mt-3\" target=\"_blank\" >View</a>\r\n                                                    <button onClick={() => this.handleSave(result)} className=\"btn badge-pill btn-outline-warning mt-3 ml-3\" >\r\n                                                        {this.state.savedBooks.map(book => book._id).includes(result._id) ? \"Unsave\" : \"Save\"}\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Results;\r\n","import React from \"react\";\r\nimport Form from \"../components/Form\";\r\nimport Results from \"../components/Results\";\r\nimport API from \"../utils/API\";\r\n\r\nclass Search extends React.Component {\r\n    state = {\r\n        value: \"\",\r\n        books: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.searchBook();\r\n    }\r\n\r\n    makeBook = bookData => {\r\n        return {\r\n            _id: bookData.id,\r\n            title: bookData.volumeInfo.title,\r\n            authors: bookData.volumeInfo.authors,\r\n            description: bookData.volumeInfo.description,\r\n            image: bookData.volumeInfo.imageLinks.thumbnail,\r\n            link: bookData.volumeInfo.previewLink\r\n        }\r\n    }\r\n\r\n    searchBook = query => {\r\n        API.getBook(query)\r\n            .then(res => this.setState({ books: res.data.items.map(bookData => this.makeBook(bookData)) }))\r\n            .catch(err => console.error(err));\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        this.searchBook(this.state.search);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form\r\n                    search={this.state.search}\r\n                    handleInputChange={this.handleInputChange}\r\n                    handleFormSubmit={this.handleFormSubmit}\r\n                />\r\n                <div className=\"container\">\r\n                    <h2>Results</h2>\r\n                    <Results books={this.state.books} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Results from \"../components/Results\";\r\n\r\nclass Saved extends Component {\r\n    state = {\r\n        savedBooks: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        API.savedBooks()\r\n            .then(savedBooks => this.setState({ savedBooks: savedBooks }))\r\n            .catch(err => console.error(err));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h2>Saved books</h2>\r\n                <Results books={this.state.savedBooks} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Saved;","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport Header from \"./components/Header\";\r\nimport Wrapper from \"./components/Wrapper\";\r\n\r\nimport NoMatch from \"./pages/NoMatch\";\r\nimport Search from \"./pages/Search\";\r\nimport Saved from \"./pages/Saved\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n \r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <NavBar />\r\n          <Header />\r\n          <Wrapper>\r\n            <Route exact path=\"/\" component={Search} />\r\n            <Route exact path=\"/search\" component={Search} />\r\n            <Route exact path=\"/saved\" component={Saved} />\r\n            <Route exact path=\"/noMatch\" component={NoMatch} />\r\n          </Wrapper>\r\n        </div>\r\n      </Router>\r\n    )\r\n  };\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './style.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}